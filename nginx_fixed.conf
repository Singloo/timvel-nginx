events {
  worker_connections  1024;  ## Default: 1024
}
# https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing
http {
  # gzip
    gzip  on;   #开启gzip
    gzip_min_length 1k; #低于1kb的资源不压缩
    gzip_vary on;  #是否添加“Vary: Accept-Encoding”响应头
    gzip_comp_level 4; #压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。
    gzip_proxied any;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;  #需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片，下面会讲为什么。
    gzip_disable "MSIE [1-6]\.";  #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
  # gzip end

  include       mime.types;
  default_type  application/octet-stream;

  upstream tokyo-1-node {
    server xxx.xxx.xxx:xxxx;
  }
  upstream sh-1-node {
    server xxx.xxx.xxx:xxxx;
  }

  upstream indigo-api {
    server xxx.xxx.xxx:xxxx
  }

  upstream tokyo-1-blog {
    server xxx.xxx.xxx:xxxx;
  }
  upstream sh-1-blog {
    server xxx.xxx.xxx:xxxx;
  }
  # forward port 80 to 8001


  upstream timvel-proxy {
    server xxx.xxx.xxx:xxxx; 
    server xxx.xxx.xxx:xxxx;
  }

  # timvel.com start
  server {
    listen 80;
    server_name timvel.com www.timvel.com;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name timvel.com www.timvel.com;
    ssl_certificate   cert/host/3830590_timvel.com.pem;
    ssl_certificate_key  cert/host/3830590_timvel.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    location / {
      proxy_pass         http://sh-1-node;
    }
  }
  # timvel.com end

  # api.indigo.timvel.com start
  server {
    listen 80;
    server_name api.indigo.timvel.com;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name api.indigo.timvel.com;
    ssl_certificate   cert/api.indigo/4030727_api.indigo.timvel.com.pem;
    ssl_certificate_key  cert/host/4030727_api.indigo.timvel.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    location / {
      proxy_pass         http://indigo-api;
    }
  }
  # api.indigo.timvel.com end

  # blog.timvel.com start
  server {
    listen 80;
    server_name blog.timvel.com;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name blog.timvel.com;
    ssl_certificate   cert/blog/3673867_blog.timvel.com.pem;
    ssl_certificate_key  cert/blog/3673867_blog.timvel.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    location / {
      proxy_pass http://tokyo-1-blog;
    }
  }
  # blog.timvel.com end

  # dev.timvel.com start
  server {
    listen 80;
    server_name dev.timvel.com;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name dev.timvel.com;
    ssl_certificate   cert/dev/3673948_dev.timvel.com.pem;
    ssl_certificate_key  cert/dev/3673948_dev.timvel.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    location / {
      proxy_pass http://tokyo-1-node;
    }
  }
  # dev.timvel.com end



  # ai.timvel start
  server {
    listen 80;
    server_name ai.timvel.com;
    location / {
      return 301 https://$host$request_uri;
    }
  }

   server {
    listen 443 ssl;
    server_name ai.timvel.com;
    ssl_certificate   cert/ai/2280509_ai.timvel.com.pem;
    ssl_certificate_key  cert/ai/2280509_ai.timvel.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    location / {
      proxy_pass http://xxx.xxx.xxx:xxxx/ai/;
    }
  }
  # ai.timvel end

  # v.timvel start
  server {
    listen 80;
    server_name v.timvel.com;
    rewrite ^(.*) https://$server_name$1 permanent;
  }

  server {
    listen 443 ssl;
    server_name v.timvel.com;
    ssl_certificate   cert/v/3264211_v.timvel.com.pem;
    ssl_certificate_key  cert/v/3264211_v.timvel.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    root /usr/share/nginx/html;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location / {
        index  index.html;
    }
    location /api/v1/get_daily_news_feed { # 与 V2Ray 配置中的 path 保持一致
      proxy_redirect off;
      proxy_pass http://xxx.xxx.xxx:xxxx;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_intercept_errors on;
      # Show real IP in v2ray access.log
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
  # v.timvel end

  # p.timvel start
   server {
    listen 80;
    server_name p.timvel.com;
    location / {
      proxy_pass http://timvel-proxy;
    }
  }
  # p.timvel end
}